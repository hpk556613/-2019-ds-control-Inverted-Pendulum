C51 COMPILER V9.52.0.0   SPI_PIC                                                           07/14/2014 23:53:35 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE SPI_PIC
OBJECT MODULE PLACED IN spi_pic.OBJ
COMPILER INVOKED BY: D:\Keil_C51\C51\BIN\C51.EXE spi_pic.c BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          //////////////////////////////////////////////////////////////////////////////////   
   2          //本程序只供学习使用，未经作者许可，不得用于其它任何用途
   3          //中景园电子
   4          //店铺地址：http://shop73023976.taobao.com/?spm=2013.1.0.0.M4PqC2
   5          //
   6          //  文 件 名   : main.c
   7          //  版 本 号   : v2.0
   8          //  作    者   : HuangKai
   9          //  生成日期   : 2014-0101
  10          //  最近修改   : 
  11          //  功能描述   : OLED 4接口演示例程(51系列)
  12          //              说明: 
  13          //              ----------------------------------------------------------------
  14          //              GND    电源地
  15          //              VCC  接5V或3.3v电源
  16          //              D0   P1^0（SCL）
  17          //              D1   P1^1（SDA）
  18          //              RES  接P12
  19          //              DC   接P13
  20          //              CS   接地               
  21          //              ----------------------------------------------------------------
  22          // 修改历史   :
  23          // 日    期   : 
  24          // 作    者   : HuangKai
  25          // 修改内容   : 创建文件
  26          //版权所有，盗版必究。
  27          //Copyright(C) 中景园电子2014/3/16
  28          //All rights reserved
  29          //******************************************************************************/
  30          #include "reg52.h"
  31          #include<intrins.h>
  32          #define high 1
  33          #define low 0 
  34          /*************Pin Define***************/
  35          sbit RES=P1^2;
  36          sbit DC=P1^3;
  37          sbit SCL=P1^0;
  38          sbit SDA=P1^1;
  39          /****************************************************/
  40          void Initial_LY096BG30();
  41          void Delay_50ms(unsigned int Del_50ms);
  42          void Delay_1ms(unsigned int Del_1ms);
  43          void fill_picture(unsigned char fill_Data);
  44          void Picture_1();
  45          void Write_SPI_Command(unsigned char ucCmd);
  46          void Write_SPI_Data(unsigned char ucData);
  47          /***********************Initial code*********************/
  48          void Initial_LY096BG30()
  49          {
  50   1        Write_SPI_Command(0xAE);   //display off
  51   1        Write_SPI_Command(0x20);  //Set Memory Addressing Mode  
  52   1        Write_SPI_Command(0x10);  //00,Horizontal Addressing Mode;01,Vertical Addressing Mode;10,Page Addressing M
             -ode (RESET);11,Invalid
  53   1        Write_SPI_Command(0xb0);  //Set Page Start Address for Page Addressing Mode,0-7
  54   1        Write_SPI_Command(0xc8);  //Set COM Output Scan Direction
C51 COMPILER V9.52.0.0   SPI_PIC                                                           07/14/2014 23:53:35 PAGE 2   

  55   1        Write_SPI_Command(0x00);//---set low column address
  56   1        Write_SPI_Command(0x10);//---set high column address
  57   1        Write_SPI_Command(0x40);//--set start line address
  58   1        Write_SPI_Command(0x81);//--set contrast control register
  59   1        Write_SPI_Command(0x7f);
  60   1        Write_SPI_Command(0xa1);//--set segment re-map 0 to 127
  61   1        Write_SPI_Command(0xa6);//--set normal display
  62   1        Write_SPI_Command(0xa8);//--set multiplex ratio(1 to 64)
  63   1        Write_SPI_Command(0x3F);//
  64   1        Write_SPI_Command(0xa4);//0xa4,Output follows RAM content;0xa5,Output ignores RAM content
  65   1        Write_SPI_Command(0xd3);//-set display offset
  66   1        Write_SPI_Command(0x00);//-not offset
  67   1        Write_SPI_Command(0xd5);//--set display clock divide ratio/oscillator frequency
  68   1        Write_SPI_Command(0xf0);//--set divide ratio
  69   1        Write_SPI_Command(0xd9);//--set pre-charge period
  70   1        Write_SPI_Command(0x22); //
  71   1        Write_SPI_Command(0xda);//--set com pins hardware configuration
  72   1        Write_SPI_Command(0x12);
  73   1        Write_SPI_Command(0xdb);//--set vcomh
  74   1        Write_SPI_Command(0x20);//0x20,0.77xVcc
  75   1        Write_SPI_Command(0x8d);//--set DC-DC enable
  76   1        Write_SPI_Command(0x14);//
  77   1        Write_SPI_Command(0xaf);//--turn on oled panel 
  78   1      }
  79          /***********************Picture Code**************************/
  80          unsigned char code show1[]=
  81          {
  82          0x00,0x06,0x0A,0xFE,0x0A,0xC6,0x00,0xE0,0x00,0xF0,0x00,0xF8,0x00,0x00,0x00,0x00,
  83          0x00,0x00,0xFE,0x7D,0xBB,0xC7,0xEF,0xEF,0xEF,0xEF,0xEF,0xEF,0xEF,0xC7,0xBB,0x7D,
  84          0xFE,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  85          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  86          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  87          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x08,
  88          0x0C,0xFE,0xFE,0x0C,0x08,0x20,0x60,0xFE,0xFE,0x60,0x20,0x00,0x00,0x00,0x78,0x48,
  89          0xFE,0x82,0xBA,0xBA,0x82,0xBA,0xBA,0x82,0xBA,0xBA,0x82,0xBA,0xBA,0x82,0xFE,0x00,
  90          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  91          0x00,0x00,0x00,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,
  92          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  93          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  94          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  95          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  96          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  97          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  98          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  99          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFE,0xFF,
 100          0x03,0x03,0x03,0x03,0x03,0x03,0x03,0x03,0x03,0xFF,0xFF,0x00,0x00,0xFE,0xFF,0x03,
 101          0x03,0x03,0x03,0x03,0x03,0x03,0x03,0x03,0xFF,0xFE,0x00,0x00,0x00,0x00,0xC0,0xC0,
 102          0xC0,0x00,0x00,0x00,0x00,0xFE,0xFF,0x03,0x03,0x03,0x03,0x03,0x03,0x03,0x03,0x03,
 103          0xFF,0xFE,0x00,0x00,0xFE,0xFF,0x03,0x03,0x03,0x03,0x03,0x03,0x03,0x03,0x03,0xFF,
 104          0xFE,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 105          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 106          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 107          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,
 108          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0x00,0x00,0xFF,0xFF,0x0C,
 109          0x0C,0x0C,0x0C,0x0C,0x0C,0x0C,0x0C,0x0C,0xFF,0xFF,0x00,0x00,0x00,0x00,0xE1,0xE1,
 110          0xE1,0x00,0x00,0x00,0x00,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 111          0xFF,0xFF,0x00,0x00,0xFF,0xFF,0x0C,0x0C,0x0C,0x0C,0x0C,0x0C,0x0C,0x0C,0x0C,0xFF,
 112          0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 113          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 114          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 115          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x1F,
 116          0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x1F,0x0F,0x00,0x00,0x0F,0x1F,0x18,
C51 COMPILER V9.52.0.0   SPI_PIC                                                           07/14/2014 23:53:35 PAGE 3   

 117          0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x1F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,
 118          0x00,0x00,0x00,0x00,0x00,0x0F,0x1F,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,
 119          0x1F,0x0F,0x00,0x00,0x0F,0x1F,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x1F,
 120          0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 121          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 122          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 123          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 124          0x00,0x00,0x00,0x00,0x00,0xE2,0x92,0x8A,0x86,0x00,0x00,0x7C,0x82,0x82,0x82,0x7C,
 125          0x00,0xFE,0x00,0x82,0x92,0xAA,0xC6,0x00,0x00,0xC0,0xC0,0x00,0x7C,0x82,0x82,0x82,
 126          0x7C,0x00,0x00,0x02,0x02,0x02,0xFE,0x00,0x00,0xC0,0xC0,0x00,0x7C,0x82,0x82,0x82,
 127          0x7C,0x00,0x00,0xFE,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 128          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 129          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 130          0x00,0x24,0xA4,0x2E,0x24,0xE4,0x24,0x2E,0xA4,0x24,0x00,0x00,0x00,0xF8,0x4A,0x4C,
 131          0x48,0xF8,0x48,0x4C,0x4A,0xF8,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 132          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 133          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 134          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 135          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 136          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xC0,0x20,0x10,0x10,
 137          0x10,0x10,0x20,0xC0,0x00,0x00,0xC0,0x20,0x10,0x10,0x10,0x10,0x20,0xC0,0x00,0x00,
 138          0x00,0x12,0x0A,0x07,0x02,0x7F,0x02,0x07,0x0A,0x12,0x00,0x00,0x00,0x0B,0x0A,0x0A,
 139          0x0A,0x7F,0x0A,0x0A,0x0A,0x0B,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 140          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 141          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 142          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 143          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 144          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1F,0x20,0x40,0x40,
 145          0x40,0x50,0x20,0x5F,0x80,0x00,0x1F,0x20,0x40,0x40,0x40,0x50,0x20,0x5F,0x80,0x00,
 146          };
 147          /*****************************************************************************
 148           函 数 名  : LED_WrDat
 149           功能描述  : 向OLED写数据
 150           输入参数  : UCHAR8 ucData  
 151           输出参数  : NONE
 152           返 回 值  : NONE
 153          *****************************************************************************/
 154          void Write_SPI_Data(unsigned char ucData)
 155          {
 156   1          unsigned char i = 8;
 157   1          DC   = 1;
 158   1          SCL  = 0;
 159   1          
 160   1          while (i--)
 161   1          {
 162   2              if (ucData & 0x80)
 163   2              {
 164   3                  SDA = 1;
 165   3              }
 166   2              else
 167   2              {
 168   3                  SDA = 0;
 169   3              }
 170   2              
 171   2              SCL = 1; 
 172   2              _nop_();
 173   2              SCL = 0;    
 174   2              ucData <<= 1;    
 175   2          }
 176   1      
 177   1          return;
 178   1      }
C51 COMPILER V9.52.0.0   SPI_PIC                                                           07/14/2014 23:53:35 PAGE 4   

 179          
 180          /*****************************************************************************
 181           函 数 名  : LED_WrCmd
 182           功能描述  : 向OLED写命令
 183           输入参数  : UCHAR8 ucCmd  
 184           输出参数  : NONE
 185           返 回 值  : NONE
 186          *****************************************************************************/
 187          void Write_SPI_Command(unsigned char ucCmd)
 188          {
 189   1          unsigned char i = 8;
 190   1          DC   = 0;
 191   1          SCL  = 0;
 192   1          while (i--)
 193   1          {
 194   2              if (ucCmd & 0x80)
 195   2              {
 196   3                  SDA = 1;
 197   3              }
 198   2              else
 199   2              {
 200   3                  SDA = 0;
 201   3              }
 202   2              SCL = 1;
 203   2              _nop_();           
 204   2              SCL = 0;    
 205   2              ucCmd <<= 1;   
 206   2          }  
 207   1      
 208   1          return;
 209   1      }
 210          
 211          /********************************************
 212          // fill_Picture
 213          ********************************************/
 214          void fill_picture(unsigned char fill_Data)
 215          {
 216   1        unsigned char m,n;
 217   1        for(m=0;m<8;m++)
 218   1        {
 219   2          Write_SPI_Command(0xb0+m);    //page0-page1
 220   2          Write_SPI_Command(0x00);    //low column start address
 221   2          Write_SPI_Command(0x10);    //high column start address
 222   2          for(n=0;n<128;n++)
 223   2            {
 224   3              Write_SPI_Data(fill_Data);
 225   3            }
 226   2        }
 227   1      }
 228          /******************************************
 229          // picture
 230          ******************************************/
 231          void picture_1()
 232          {
 233   1        unsigned char x,y;
 234   1        unsigned int i=0;
 235   1        for(y=0;y<8;y++)
 236   1          {
 237   2            Write_SPI_Command(0xb0+y);
 238   2            Write_SPI_Command(0x00);
 239   2            Write_SPI_Command(0x10);
 240   2            for(x=0;x<128;x++)
C51 COMPILER V9.52.0.0   SPI_PIC                                                           07/14/2014 23:53:35 PAGE 5   

 241   2              {
 242   3                Write_SPI_Data(show1[i++]);
 243   3              }
 244   2          }
 245   1      }
 246          
 247          
 248          /***********************Delay****************************************/
 249          void Delay_50ms(unsigned int Del_50ms)    //
 250          {
 251   1        unsigned int m;
 252   1        for(;Del_50ms>0;Del_50ms--)
 253   1          for(m=6245;m>0;m--);
 254   1      }
 255          
 256          void Delay_1ms(unsigned int Del_1ms)    //
 257          {
 258   1        unsigned char j;
 259   1        while(Del_1ms--)
 260   1        { 
 261   2          for(j=0;j<123;j++);
 262   2        }
 263   1      }
 264          /*******************************Main*******************************/
 265          void main(void)
 266          {
 267   1        RES=0;
 268   1        Delay_1ms(10);
 269   1        RES=1;
 270   1        Delay_1ms(10);        //
 271   1        DC=0;     //      //
 272   1        Initial_LY096BG30();
 273   1        Delay_1ms(5);
 274   1        while(1)
 275   1        {
 276   2          Picture_1();    
 277   2        }
 278   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    379    ----
   CONSTANT SIZE    =   1024    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
