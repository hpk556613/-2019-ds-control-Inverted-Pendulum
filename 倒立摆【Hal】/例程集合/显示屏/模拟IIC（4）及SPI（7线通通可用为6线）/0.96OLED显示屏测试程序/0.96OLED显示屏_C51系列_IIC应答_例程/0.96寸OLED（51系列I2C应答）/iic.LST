C51 COMPILER V9.52.0.0   IIC                                                               07/14/2014 23:52:30 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE IIC
OBJECT MODULE PLACED IN iic.OBJ
COMPILER INVOKED BY: D:\Keil_C51\C51\BIN\C51.EXE iic.c BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          //////////////////////////////////////////////////////////////////////////////////   
   2          //本程序只供学习使用，未经作者许可，不得用于其它任何用途
   3          //中景园电子
   4          //店铺地址：http://shop73023976.taobao.com/?spm=2013.1.0.0.M4PqC2
   5          //
   6          //  文 件 名   : main.c
   7          //  版 本 号   : v2.0
   8          //  作    者   : HuangKai
   9          //  生成日期   : 2014-0101
  10          //  最近修改   : 
  11          //  功能描述   : OLED IIC接口演示例程(51系列)
  12          //              说明: 
  13          //              ----------------------------------------------------------------
  14          //              GND    电源地
  15          //              VCC  接5V或3.3v电源
  16          //              D0   P1^0（SCL）
  17          //              D1   P1^1（SDA）
  18          //              RES  接高
  19          //              DC   接地
  20          //              CS   接地                
  21          //              ----------------------------------------------------------------
  22          // 修改历史   :
  23          // 日    期   : 
  24          // 作    者   : HuangKai
  25          // 修改内容   : 创建文件
  26          //版权所有，盗版必究。
  27          //Copyright(C) 中景园电子2014/3/16
  28          //All rights reserved
  29          //******************************************************************************/
  30          #include "reg52.h"
  31          #include "intrins.h"
  32          #define high 1
  33          #define low 0 
  34          /*************Pin Define***************/
  35          
  36          sbit SCL=P1^0;
  37          sbit SDA=P1^1;
  38          /****************************************************/
  39          void Initial_LY096BG30();
  40          void Delay_50ms(unsigned int Del_50ms);
  41          void Delay_1ms(unsigned int Del_1ms);
  42          void fill_picture(unsigned char fill_Data);
  43          void Picture_1();
  44          void IIC_Start();
  45          void IIC_Stop();
  46          void Write_IIC_Command(unsigned char IIC_Command);
  47          void Write_IIC_Data(unsigned char IIC_Data);
  48          bit Write_IIC_Byte(unsigned char IIC_Byte);
  49          /***********************Initial code*********************/
  50          void Initial_LY096BG30()
  51          {
  52   1        Write_IIC_Command(0xAE);   //display off
  53   1        Write_IIC_Command(0x20);  //Set Memory Addressing Mode  
  54   1        Write_IIC_Command(0x10);  //00,Horizontal Addressing Mode;01,Vertical Addressing Mode;10,Page Addressing M
             -ode (RESET);11,Invalid
C51 COMPILER V9.52.0.0   IIC                                                               07/14/2014 23:52:30 PAGE 2   

  55   1        Write_IIC_Command(0xb0);  //Set Page Start Address for Page Addressing Mode,0-7
  56   1        Write_IIC_Command(0xc8);  //Set COM Output Scan Direction
  57   1        Write_IIC_Command(0x00);//---set low column address
  58   1        Write_IIC_Command(0x10);//---set high column address
  59   1        Write_IIC_Command(0x40);//--set start line address
  60   1        Write_IIC_Command(0x81);//--set contrast control register
  61   1        Write_IIC_Command(0x7f);
  62   1        Write_IIC_Command(0xa1);//--set segment re-map 0 to 127
  63   1        Write_IIC_Command(0xa6);//--set normal display
  64   1        Write_IIC_Command(0xa8);//--set multiplex ratio(1 to 64)
  65   1        Write_IIC_Command(0x3F);//
  66   1        Write_IIC_Command(0xa4);//0xa4,Output follows RAM content;0xa5,Output ignores RAM content
  67   1        Write_IIC_Command(0xd3);//-set display offset
  68   1        Write_IIC_Command(0x00);//-not offset
  69   1        Write_IIC_Command(0xd5);//--set display clock divide ratio/oscillator frequency
  70   1        Write_IIC_Command(0xf0);//--set divide ratio
  71   1        Write_IIC_Command(0xd9);//--set pre-charge period
  72   1        Write_IIC_Command(0x22); //
  73   1        Write_IIC_Command(0xda);//--set com pins hardware configuration
  74   1        Write_IIC_Command(0x12);
  75   1        Write_IIC_Command(0xdb);//--set vcomh
  76   1        Write_IIC_Command(0x20);//0x20,0.77xVcc
  77   1        Write_IIC_Command(0x8d);//--set DC-DC enable
  78   1        Write_IIC_Command(0x14);//
  79   1        Write_IIC_Command(0xaf);//--turn on oled panel 
  80   1      }
  81          /***********************Picture Code**************************/
  82          unsigned char code show1[]=
  83          {
  84          0x00,0x06,0x0A,0xFE,0x0A,0xC6,0x00,0xE0,0x00,0xF0,0x00,0xF8,0x00,0x00,0x00,0x00,
  85          0x00,0x00,0xFE,0x7D,0xBB,0xC7,0xEF,0xEF,0xEF,0xEF,0xEF,0xEF,0xEF,0xC7,0xBB,0x7D,
  86          0xFE,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  87          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  88          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  89          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x08,
  90          0x0C,0xFE,0xFE,0x0C,0x08,0x20,0x60,0xFE,0xFE,0x60,0x20,0x00,0x00,0x00,0x78,0x48,
  91          0xFE,0x82,0xBA,0xBA,0x82,0xBA,0xBA,0x82,0xBA,0xBA,0x82,0xBA,0xBA,0x82,0xFE,0x00,
  92          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  93          0x00,0x00,0x00,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,
  94          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  95          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  96          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  97          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  98          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  99          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 100          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 101          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFE,0xFF,
 102          0x03,0x03,0x03,0x03,0x03,0x03,0x03,0x03,0x03,0xFF,0xFF,0x00,0x00,0xFE,0xFF,0x03,
 103          0x03,0x03,0x03,0x03,0x03,0x03,0x03,0x03,0xFF,0xFE,0x00,0x00,0x00,0x00,0xC0,0xC0,
 104          0xC0,0x00,0x00,0x00,0x00,0xFE,0xFF,0x03,0x03,0x03,0x03,0x03,0x03,0x03,0x03,0x03,
 105          0xFF,0xFE,0x00,0x00,0xFE,0xFF,0x03,0x03,0x03,0x03,0x03,0x03,0x03,0x03,0x03,0xFF,
 106          0xFE,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 107          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 108          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 109          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,
 110          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0x00,0x00,0xFF,0xFF,0x0C,
 111          0x0C,0x0C,0x0C,0x0C,0x0C,0x0C,0x0C,0x0C,0xFF,0xFF,0x00,0x00,0x00,0x00,0xE1,0xE1,
 112          0xE1,0x00,0x00,0x00,0x00,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 113          0xFF,0xFF,0x00,0x00,0xFF,0xFF,0x0C,0x0C,0x0C,0x0C,0x0C,0x0C,0x0C,0x0C,0x0C,0xFF,
 114          0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 115          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 116          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
C51 COMPILER V9.52.0.0   IIC                                                               07/14/2014 23:52:30 PAGE 3   

 117          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x1F,
 118          0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x1F,0x0F,0x00,0x00,0x0F,0x1F,0x18,
 119          0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x1F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,
 120          0x00,0x00,0x00,0x00,0x00,0x0F,0x1F,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,
 121          0x1F,0x0F,0x00,0x00,0x0F,0x1F,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x1F,
 122          0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 123          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 124          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 125          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 126          0x00,0x00,0x00,0x00,0x00,0xE2,0x92,0x8A,0x86,0x00,0x00,0x7C,0x82,0x82,0x82,0x7C,
 127          0x00,0xFE,0x00,0x82,0x92,0xAA,0xC6,0x00,0x00,0xC0,0xC0,0x00,0x7C,0x82,0x82,0x82,
 128          0x7C,0x00,0x00,0x02,0x02,0x02,0xFE,0x00,0x00,0xC0,0xC0,0x00,0x7C,0x82,0x82,0x82,
 129          0x7C,0x00,0x00,0xFE,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 130          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 131          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 132          0x00,0x24,0xA4,0x2E,0x24,0xE4,0x24,0x2E,0xA4,0x24,0x00,0x00,0x00,0xF8,0x4A,0x4C,
 133          0x48,0xF8,0x48,0x4C,0x4A,0xF8,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 134          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 135          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 136          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 137          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 138          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xC0,0x20,0x10,0x10,
 139          0x10,0x10,0x20,0xC0,0x00,0x00,0xC0,0x20,0x10,0x10,0x10,0x10,0x20,0xC0,0x00,0x00,
 140          0x00,0x12,0x0A,0x07,0x02,0x7F,0x02,0x07,0x0A,0x12,0x00,0x00,0x00,0x0B,0x0A,0x0A,
 141          0x0A,0x7F,0x0A,0x0A,0x0A,0x0B,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 142          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 143          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 144          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 145          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 146          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1F,0x20,0x40,0x40,
 147          0x40,0x50,0x20,0x5F,0x80,0x00,0x1F,0x20,0x40,0x40,0x40,0x50,0x20,0x5F,0x80,0x00,
 148          };
 149          /**********************************************
 150          //IIC Start
 151          **********************************************/
 152          void IIC_Start()
 153          {
 154   1         SCL = high;
 155   1         //Delay_us(1);   
 156   1         SDA = high;
 157   1         _nop_();
 158   1         SDA = low;
 159   1         _nop_();_nop_();
 160   1         SCL = low;
 161   1      
 162   1      }
 163          
 164          /**********************************************
 165          //IIC Stop
 166          **********************************************/
 167          void IIC_Stop()
 168          {
 169   1         SDA = low;
 170   1         _nop_();
 171   1         SCL = high;
 172   1         _nop_();_nop_();
 173   1         SDA = high;
 174   1      }
 175          /**********************************************
 176          // IIC Write byte
 177          **********************************************/
 178          bit Write_IIC_Byte(unsigned char IIC_Byte)
C51 COMPILER V9.52.0.0   IIC                                                               07/14/2014 23:52:30 PAGE 4   

 179          {
 180   1        unsigned char i;
 181   1        bit Ack_Bit;                    //应答信号
 182   1        for(i=0;i<8;i++)    
 183   1        {
 184   2          if(IIC_Byte & 0x80)   //1?0?
 185   2          SDA=high;
 186   2          else
 187   2          SDA=low;
 188   2          //Delay_us(1);
 189   2          SCL=high;
 190   2          _nop_();_nop_();
 191   2          SCL=low;
 192   2          //Delay_us(1);
 193   2          IIC_Byte<<=1;     //loop
 194   2        }
 195   1         SDA = high;                    //释放IIC SDA总线为主器件接收从器件产生应答信号 
 196   1        _nop_();_nop_();
 197   1        SCL = high;                     //第9个时钟周期
 198   1        _nop_();_nop_();
 199   1        Ack_Bit = SDA;                //读取应答信号
 200   1        SCL = low;
 201   1        return Ack_Bit; 
 202   1      }  
 203          /**********************************************
 204          // IIC Write Command
 205          **********************************************/
 206          void Write_IIC_Command(unsigned char IIC_Command)
 207          {
 208   1         IIC_Start();
 209   1         Write_IIC_Byte(0x78);            //Slave address,SA0=0
 210   1         Write_IIC_Byte(0x00);      //write command
 211   1         Write_IIC_Byte(IIC_Command); 
 212   1         IIC_Stop();
 213   1      }
 214          /**********************************************
 215          // IIC Write Data
 216          **********************************************/
 217          void Write_IIC_Data(unsigned char IIC_Data)
 218          {
 219   1         IIC_Start();
 220   1         Write_IIC_Byte(0x78);      
 221   1         Write_IIC_Byte(0x40);      //write data
 222   1         Write_IIC_Byte(IIC_Data);
 223   1         IIC_Stop(); 
 224   1      }
 225          /********************************************
 226          // fill_Picture
 227          ********************************************/
 228          void fill_picture(unsigned char fill_Data)
 229          {
 230   1        unsigned char m,n;
 231   1        for(m=0;m<8;m++)
 232   1        {
 233   2          Write_IIC_Command(0xb0+m);    //page0-page1
 234   2          Write_IIC_Command(0x00);    //low column start address
 235   2          Write_IIC_Command(0x10);    //high column start address
 236   2          for(n=0;n<128;n++)
 237   2            {
 238   3              Write_IIC_Data(fill_Data);
 239   3            }
 240   2        }
C51 COMPILER V9.52.0.0   IIC                                                               07/14/2014 23:52:30 PAGE 5   

 241   1      }
 242          /******************************************
 243          // picture
 244          ******************************************/
 245          void picture_1()
 246          {
 247   1        unsigned char x,y;
 248   1        unsigned int i=0;
 249   1        for(y=0;y<8;y++)
 250   1          {
 251   2            Write_IIC_Command(0xb0+y);
 252   2            Write_IIC_Command(0x00);
 253   2            Write_IIC_Command(0x10);
 254   2            for(x=0;x<128;x++)
 255   2              {
 256   3                Write_IIC_Data(show1[i++]);
 257   3              }
 258   2          }
 259   1      }
 260          
 261          /***********************Delay****************************************/
 262          void Delay_50ms(unsigned int Del_50ms)    //
 263          {
 264   1        unsigned int m;
 265   1        for(;Del_50ms>0;Del_50ms--)
 266   1          for(m=6245;m>0;m--);
 267   1      }
 268          
 269          void Delay_1ms(unsigned int Del_1ms)    //
 270          {
 271   1        unsigned char j;
 272   1        while(Del_1ms--)
 273   1        { 
 274   2          for(j=0;j<123;j++);
 275   2        }
 276   1      }
 277          /*******************************Main*******************************/
 278          void main(void)
 279          {
 280   1      
 281   1        Initial_LY096BG30();
 282   1        Delay_1ms(5);
 283   1        while(1)
 284   1        {
 285   2          fill_picture(0xff); Delay_50ms(25);
 286   2          fill_picture(0xf0); Delay_50ms(25);
 287   2          Picture_1();    Delay_50ms(25);
 288   2        }
 289   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    431    ----
   CONSTANT SIZE    =   1024    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
